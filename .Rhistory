se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 50
prop <- 0.5
printAllSE.binom(n ,N, prop)
printAllSE.binom <- function(n, N, prob, bootstrapN=10000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.5
printAllSE.binom(n ,N, prop)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.5
printAllSE.binom(n ,N, prop)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.5
printAllSE.binom(n ,N, prop)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.3
printAllSE.binom(n ,N, prop)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
printAllSE.binom(n ,N, prop)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- 1/(lambda*sqrt(n))
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
printAllSE.poision(n, 1/3)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=10000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- 1/(lambda*sqrt(n))
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
printAllSE.poision(n, 1/3)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=10000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
printAllSE.poision(n, 1/3)
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=10000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
cat(lambda,": ", printAllSE.poision(n, lambda))
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=10000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot)")
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=10000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", tmp$exakt-tmp$boot, " (Fehler) \n")
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", tmp$exakt-tmp$boot, " (Fehler) \n")
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(m, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(n in c(100, 500, 1000, 3000)) {
cat("\nn=", n, "\n")
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# printAllSE.binom(n ,N, prop)
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
cat("\nn=", n, "\n")
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# Binomialverteilte:
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
cat("\nn=", n, "\n")
for(prob in c(1/2, 1/3, 1/4, 1/5, 1/6)) {
N <- floor(prop*n)
cat("N=",N, "\n")
tmp <- printAllSE.binom(n , N, prop)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
}
#
# Poisionverteilte:
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
cat("\nn=", n, "\n")
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
n <- 100
N <- 70
prop <- 0.9
# Binomialverteilte:
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
cat("\nn=", n, "\n")
for(prob in c(1/2, 1/3, 1/4, 1/5, 1/6)) {
N <- floor(prob*n)
cat("N=",N, "\n")
tmp <- printAllSE.binom(n , N, prob)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
}
#
# Poisionverteilte:
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
cat("\nn=", n, "\n")
for(lambda in c(1/2,1/3, 1/4, 1/5, 1/6)) {
tmp <- printAllSE.poision(n, lambda)
cat(lambda,": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler) \n")
}
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.normal <- function(n, mu=0, sigma=1, bootstrapN=1000, theta=mean) {
stipro <- rnorm(n, mu, sigma)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(sigma^2/n)
se.geschaetzt <- sqrt(var(stipro)/n)
se <- list(se.exakt, se.boot, se.geschaetzt)
names(se) <- c("exakt", "boot", "geschätzt")
return(se)
}
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
tmp <- printAllSE.normal(n)
cat("\nn=", n, tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", tmp$geschaetzt, "(geschätzt), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler (boot))", abs(tmp$exakt-tmp$geschaetzt),"(abs. Fehler (geschätzt)) \n")
}
printAllSE.binom <- function(n, N, prob, bootstrapN=1000, theta=mean) {
stipro <- rbinom(n, N, prob)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(N*prop*(1-prop))/sqrt(n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.poision <- function(n, lambda, bootstrapN=1000, theta=mean) {
stipro <- rpois(n, lambda)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(lambda/n)
se <- list(se.exakt, se.boot)
names(se) <- c("exakt", "boot")
return(se)
}
printAllSE.normal <- function(n, mu=0, sigma=1, bootstrapN=1000, theta=mean) {
stipro <- rnorm(n, mu, sigma)
bootvert <- do(bootstrapN) * theta(resample(stipro))
se.boot <- sd(bootvert$theta)
se.exakt <- sqrt(sigma^2/n)
se.geschaetzt <- sqrt(var(stipro)/n)
se <- list(se.exakt, se.boot, se.geschaetzt)
names(se) <- c("exakt", "boot", "geschaetzt")
return(se)
}
for(n in c(30, 50, 100, 200, 500, 1000, 3000)) {
tmp <- printAllSE.normal(n)
cat("\nn=", n, ": ", tmp$exakt, " (exakt), ", tmp$boot, " (boot), ", tmp$geschaetzt, "(geschätzt), ", abs(tmp$exakt-tmp$boot), " (abs. Fehler (boot))", abs(tmp$exakt-tmp$geschaetzt),"(abs. Fehler (geschätzt)) \n")
}
opt <- data.frame (mehr=1, salz=1, backpulver = 1)
opt
library(mosaic)
library(DiagrammeR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(engine.path = list(
dot = '/opt/local/bin/dot'
))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(engine.path = list(
dot = '/opt/local/bin/dot'
))
