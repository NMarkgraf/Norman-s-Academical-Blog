set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
histogram( coup )
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
barplot( coup )
barplot(table(coup) )
barplot(table(coup, row.names=0:36 )
)
barplot(table(coup, row.names=0:36, xlim=0:36 ))
barplot(table(coup, row.names=0:36), xlim=0:36 )
barplot(table(coup, row.names=0:36), xlim=c(0,36) )
barplot(table(coup), xlim=c(0,36) )
bargraph( ~ anz | 0:36, data=permanenz, type="count")
bargraph(anz ~0:36 , data=permanenz, type="count")
bargraph(anz ~ as.factor(0:36) , data=permanenz, type="count")
bargraph( ~anz | as.factor(0:36) , data=permanenz, type="count")
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
barplot(table(coup), xlim=c(0,36) )
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 1, 37), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
barplot(table(coup), xlim=c(0,36) )
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 1, 38), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
barplot(table(coup), xlim=c(0,36) )
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
permanenz
dunif(37,0,37)
runif(37,0,37)
runif(37,0,38)
trunc(runif(37,0,38))
trunc(runif(37,0,38))
trunc(runif(37,0,38))
trunc(runif(37,0,38))
trunc(runif(37,0,38))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
Nullvtlg <- do(10000) * rflip(n = 14, prob = 1/3)
library(mosaic)
Nullvtlg <- do(10000) * rflip(n = 14, prob = 1/3)
prop( ~ (heads>=3), data=Nullvtlg)
Nullvtlg
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::install_hugo(force=T)
blogdown::install_hugo(force=T)
blogdown:::new_post_addin()
library(mosaic)
download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
linMod <- lm(tip ~ total_bill, data = tips)
summary(linMod)
plotModel(linMod)
beta_0 <- coef(linMod)["(Intercept)"]  # Grundtrinkgeld
tips$delta_tip <- tips$tip - beta_0    # wird abgezogen
linModDelta <- lm(delta_tip ~ total_bill, data = tips)
summary(linModDelta)
plotModel(linMod)
plotModel(linModDelta)
plotModel(linModDelta)
blogdown:::serve_site()
length(tips$total_bill)
length(tips$total_bill)
n(tips)
n()
download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
beta_total_bill <- coef(linModDelta)["total_bill"]
tip$error_tip <- tip$delta_tip - beta_total_bill * tip$total_bill
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- tips$delta_tip - beta_total_bill * tips$total_bill
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- tips$delta_tip - beta_total_bill * tips$total_bill
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$delta_tip - beta_total_bill * tips$total_bill)
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$delta_tip - beta_total_bill * tips$total_bill)
view(tips)
View(tips)
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$tip - beta_0 - beta_total_bill * tips$total_bill)
linModError <- lm(delta_error ~ total_bill, data = tips)
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$tip - beta_0 - beta_total_bill * tips$total_bill)
linModError <- lm(delta_tip ~ total_bill, data = tips)
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$tip - beta_0 - beta_total_bill * tips$total_bill)
linModError <- lm(error_tip ~ total_bill, data = tips)
summary(linModError)
plotModel(linModError)
xyplot(residuals(linMod) ~fitted(linMod))
histogramm(residuals(linMod) ~ fitted(linMod))
histogram(residuals(linMod) ~ fitted(linMod))
histogram( ~residuals(linMod))
xyplot(residuals(linMod) ~ fitted(linMod), l=0)
xyplot(residuals(linMod) ~ fitted(linMod))
histogram( ~residuals(linMod), nint=9)
histogram( ~residuals(linMod), nint=19)
favstats(~residuals(linMod))
histogram( ~residuals(linMod), nint=19)
favstats(~residuals(linMod))
1.019943 * 244/242
1.019943 * 244/243
1.019943 * sqrt(244/243)
sd(residuals(linMod))
1.019943 * sqrt(243/242)
linMod$residuals
linMod$residuals
sd(linMod$residuals)
x <- favstats(~residuals(linMod))
x <- favstats(~residuals(linMod))
x
x$n
tmp <- favstats(~residuals(linMod))
obs_n <- tmp$n
obs_sd <- tmp$sd
histogram( ~residuals(linMod), nint=19)
shapiro.test(~residuals(linMod))
shapiro.test( ~residuals(linMod) )
shapiro.test( residuals(linMod) )
qqnorm(residuals(linMod) )
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::update_meta_addin()
library(mosaic)
download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
install.packages(c("backports", "knitr"))
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
library(mosaic, warn.conflicts = FALSE, quietly = TRUE)
#download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
blogdown::build_site()
blogdown::build_site()
library(mosaic, warn.conflicts = FALSE, quietly = TRUE, verbose = FALSE)
#download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
linMod <- lm(tip ~ total_bill, data = tips)
summary(linMod)
plotModel(linMod)
beta_0 <- coef(linMod)["(Intercept)"]  # Grundtrinkgeld
tips$delta_tip <- tips$tip - beta_0    # wird abgezogen
linModDelta <- lm(delta_tip ~ total_bill, data = tips)
summary(linModDelta)
plotModel(linModDelta)
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$tip - beta_0 - beta_total_bill * tips$total_bill)
linModError <- lm(error_tip ~ total_bill, data = tips)
summary(linModError)
plotModel(linModError)
xyplot(residuals(linMod) ~ fitted(linMod))
favstats(~residuals(linMod))
tmp <- favstats(~residuals(linMod))
obs_n <- tmp$n
obs_sd <- tmp$sd
histogram( ~residuals(linMod), nint=19)
shapiro.test( residuals(linMod) )
qqnorm( residuals(linMod) )
blogdown::build_site()
blogdown::build_site()
install.packages(c("curl", "hunspell"))
blogdown::build_site()
blogdown::build_dir()
blogdown::serve_site()
blogdown::install_hugo(force=TRUE)
blogdown::serve_site()
install.packages(c("dbplyr", "digest", "DRR", "foreach", "ggformula", "git2r", "iterators", "lme4", "MASS", "MBESS", "OpenMx", "RCurl", "reshape2", "rgl", "rlang", "rprojroot", "slam", "sp", "StanHeaders", "testthat", "tibble", "tidytext", "visNetwork", "withr", "xts", "zoo"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
devtools::install_github('rstudio/blogdown')
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::build_site(local=TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site(local=TRUE)
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::update_meta_addin()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown::hugo_server()
blogdown::hugo_version()
library(blogdown)
blogdown::hugo_build()
library(blogdown)
blogdown:::serve_site()
stop_server()
blogdown::build_dir()
blogdown::build_dir(force=TRUE)
devtools::session_info('blogdown')
install.packages('yaml')
install.packages("yaml")
install.packages('blogdown')
blogdown:::serve_site()
blogdown:::build_rmds()
blogdown:::build_dir(force = T)
hugo_serve()
blogdown::hugo_serve()
blogdown::hugo_server()
blogdown::hugo_build()
#, warning=FALSE, error=FALSE}
library(mosaic, warn.conflicts = FALSE, quietly = TRUE, verbose = FALSE)
#download.file("https://goo.gl/whKjnl", destfile = "tips.csv")
tips <- read.csv2("tips.csv")
xyplot(tip ~ total_bill, data=tips, panel=panel.abline(v=mean(tips$tip)))
library(lattice)
xyplot(tip ~ total_bill, data=tips, panel=panel.abline(v=mean(tips$tip)))
library(lattice)
xyplot(tip ~ total_bill, data=tips, panel=function(x,y,...) = {panel.abline(v=mean(tips$tip))})
library(lattice)
xyplot(tip ~ total_bill, data=tips, panel=function(x,y,...){panel.abline(v=mean(tips$tip))})
library(lattice)
xyplot(tip ~ total_bill, data=tips, panel=function(x,y,...){panel.abline(h=mean(tips$tip))})
library(lattice)
xyplot(tip ~ total_bill, data=tips, panel=function(x,y,...){panel.average()})
library(lattice)
xyplot(tip ~ total_bill, data=tips, panel=function(x,y,...){panel.average(x,y)})
library(lattice)
xyplot(tip ~ total_bill, data=tips,
panel = function(...) {
type <- types[panel.number()]
horizontal <- horiz[panel.number()]
panel.xyplot(...,
type = type,
horizontal = horizontal);
panel.average(x,y)}
)
library(lattice)
xyplot(tip ~ total_bill, data=tips,
panel = function(...) {
panel.xyplot(...,
type = type,
horizontal = horizontal);
}
)
library(lattice)
xyplot(tip ~ total_bill, data=tips
)
library(lattice)
xyplot(
tip ~ total_bill, data=tips, type=c("p", "l")
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y, pch=19)
panel.abline(h = mean(y))
}
xyplot(
tip ~ total_bill, data=tips, type=c("p", "l"), panel=mypanel
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y, pch=19)
panel.abline(h = mean(y))
}
xyplot(
tip ~ total_bill, data=tips, panel=mypanel
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y, pch=19)
panel.abline(h = mean(y))
}
xyplot(
tip ~ total_bill, data=tips,
panel=mypanel,
main="Streudiagramm mit Mittelwert der Trinkgelder"
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y, pch=19)
panel.abline(h = mean(y),lwd=2, lty=2, col="darkgreen"))
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y)
panel.abline(h = mean(y), lwd=2, lty=2, col="darkgreen")
}
xyplot(
tip ~ total_bill, data=tips,
panel=mypanel,
main="Streudiagramm mit Mittelwert der Trinkgelder"
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y)
panel.abline(h = mean(y), lwd=2, lty=2, col="darkgreen")
panel.lmline(x, y, col="red", lwd=1, lty=2)
}
xyplot(
tip ~ total_bill, data=tips,
panel=mypanel,
main="Streudiagramm mit Mittelwert der Trinkgelder"
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y)
panel.abline(h = mean(y), lwd=2, lty=2, col="darkgreen")
panel.lmline(x, y, col="red", lwd=1, lty=2)
}
xyplot(
tip ~ total_bill, data=tips,
panel = mypanel,
main  = "Streudiagramm der Trinkgelder",
sub   = "Grün der Mittelwert, rot die Regressionsgerade"
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y)
panel.abline(h = mean(y), lwd=2, lty=2, col="darkgreen")
panel.lmline(x, y, col="red", lwd=1, lty=2)
}
xyplot(
tip ~ total_bill, data=tips,
panel = mypanel,
main  = "Streudiagramm der Trinkgelder",
sub   = "Grün der Mittelwert, rot die Regressionsgerade",
ylab  = "Trinkgeld",
xöab  = "Rechnungsbetrag"
)
library(lattice)
mypanel <- function(x, y) {
panel.xyplot(x, y)
panel.abline(h = mean(y), lwd=2, lty=2, col="darkgreen")
panel.lmline(x, y, col="red", lwd=1, lty=2)
}
xyplot(
tip ~ total_bill, data=tips,
panel = mypanel,
main  = "Streudiagramm der Trinkgelder",
sub   = "Grün der Mittelwert, rot die Regressionsgerade",
ylab  = "Trinkgeld",
xlab  = "Rechnungsbetrag"
)
tmp <- favstats(~residuals(linMod))
obs_n <- tmp$n
obs_sd <- tmp$sd
tmp$sd^2
1-(obs_sd^2 / var(tips$tip))*(obs_n-1)/(obs_n-1-1))
1-(obs_sd^2 / var(tips$tip))*(obs_n-1)/(obs_n-1-1))
1-(obs_sd^2 / var(tips$tip))*(obs_n-1)/(obs_n-1-1)
beta_total_bill <- coef(linModDelta)["total_bill"]
tips$error_tip <- (tips$tip - beta_0 - beta_total_bill * tips$total_bill)
linModError <- lm(error_tip ~ total_bill, data = tips)
summary(linModError)
summary(linMod)
coef(linMod)
x<- coef(linMod)
x
linMod$effects
linMod$qr
linMod$qr$qraux
linMod$qr$rank
linMod$qr$tol
linMod
summary(linMod)
x <- summary(linMod)
x$r.squared
r-sq <- summary(linMod)$r.squared
r.sq <- summary(linMod)$r.squared
