n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
for(i in 1:length(nn)){
p[i] <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p[i] <- p[i] %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
}
grid.arrange(p, nrow=2, ncol=2)
p
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
for(i in 1:length(nn)){
p[i] <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p[i] <- p[i] %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
}
g1 <- ggplotGrob(p[1])
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
for(i in 1:length(nn)){
p[i] <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p[i]<- p[i] %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
}
p[1]
p[2]
p[3]
p[4]
p[[1]]
p[[2]]
p
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p
p[1] <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
l[1] <- p
rbind(x, p)
x
pl <- rbind(p)
pl
pl <- rbind(p)
pl
pl <- rbind(pl, p)
pl
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
rm(pl)
for(i in 1:length(nn)){
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
pl <- rbind(pl, p)
}
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
rm(pl)
for(i in 1:length(nn)){
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
pl <- rbind(p)
}
pl
pl[1]
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
grid.arrange(p1, p2, p3)
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
grid.arrange(p1, p2, p3, ncol=3)
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red") %>%
title("Vergleich der (empirischen) Verteilungsfunktionen")
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red") +
ggtitle("Vergleich der (empirischen) Verteilungsfunktionen")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
grid.arrange(p1, p2, p3, ncol=3)
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
grid.arrange(p1, p2, p3, ncol=3)+
ggtitle("Vergleich der (empirischen) Verteilungsfunktionen")
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob("Vergleich der (empirischen) Verteilungsfunktionen"))
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=",nn[i]))
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
set.seed(2009)
i = 2
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
set.seed(2009)
i = 2
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="pink") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
i = 2
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
i = 3
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
library(ggplot2)
library(gtable)
library(grid)
library(gridExtra)
set.seed(2009)
n_max <- 100
step <- 5
start <- 5
nn <- c(5, 25, 100, 500)
set.seed(2009)
i = 1
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
i = 2
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
i = 3
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
i = 4
set.seed(2009)
u <- zscore(round(runif(nn[i], 0, 100), 3))
x <- zscore(round(rchisq(nn[i], 10, ncp= 5), 3))
y <- zscore(round(rnorm(nn[i], 50, 15), 3))
p <- gf_function(fun = pnorm, xlim=c(-3,3), col="red")
p1 <- p  %>%
gf_function(fun = ecdf(u), xlim=c(-3,3), col="blue") + ggtitle("U")
p2 <- p  %>%
gf_function(fun = ecdf(x), xlim=c(-3,3), col="green") + ggtitle("X")
p3 <- p  %>%
gf_function(fun = ecdf(y), xlim=c(-3,3), col="yellow") + ggtitle("Y")
grid.arrange(p1, p2, p3, ncol=3, top=textGrob(paste0("Vergleich der (empirischen) Verteilungsfunktionen n=", nn[i])))
install.packages("profvis")
install.packages(c("arules", "arulesViz", "bookdown", "broom", "cli", "data.table", "dendextend", "digest"))
install.packages(c("arules", "arulesViz", "bookdown", "broom", "cli", "data.table", "dendextend", "digest"))
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages(c("broom", "rmarkdown", "tinytex"))
blogdown:::serve_site()
blogdown::install_hugo(version = "0.60.1", force = TRUE)
blogdown:::serve_site()
blogdown::install_hugo(version = "0.60.1", force = TRUE)
hugo -v
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::update_meta_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::update_meta_addin()
servr::daemon_stop(2)
blogdown:::serve_site()
servr::daemon_stop(3)
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
