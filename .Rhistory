einkommen = rlnorm(10000, meanlog=3500, sdlog=700)
histogram(einkommen)
einkommen
einkommen = rlnorm(10000, meanlog=log(3500), sdlog=log(700))
einkommen
histogram(einkommen)
einkommen = rlnorm(1000, meanlog=log(3500), sdlog=log(700))
histogram(einkommen)
histogram(rlnorm(100))
histogram(rlnorm(1000))
histogram(rlnorm(10000))
histogram(rlnorm(100))
histogram(rlnorm(100, meanlog=10))
histogram(rlnorm(100, meanlog=log(3500)))
histogram(rlnorm(100, meanlog=log(350)))
histogram(rlnorm(100, meanlog=log(3500)))
histogram(rlnorm(100, meanlog=log(3500), sdlog(100)))
histogram(rlnorm(100, meanlog=log(3500), sdlog=log(100)))
histogram(rlnorm(100, meanlog=log(3500), sdlog=log(200)))
histogram(rlnorm(100, meanlog=log(350), sdlog=log(200)))
histogram(rlnorm(100, meanlog=log(350), sdlog=log(20)))
histogram(rlnorm(100, meanlog=3500)
)
histogram(rlnorm(100))
histogram(rlnorm(100))
histogram(rlnorm(1000))
histogram(rlnorm(1000))
histogram(rlnorm(1000))
histogram(rlnorm(1000))
histogram(rlnorm(1000))
histogram(rlnorm(1000))
histogram(rlnorm(1000), meanlog=10)
histogram(rlnorm(1000), meanlog=10)
histogram(rlnorm(1000), meanlog=10)
histogram(rlnorm(1000), meanlog=10)
histogram(rlnorm(1000), meanlog=10)
histogram(rlnorm(1000), meanlog=10)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=100)
histogram(rlnorm(1000), meanlog=1000)
histogram(rlnorm(1000), meanlog=1000)
histogram(rlnorm(1000), meanlog=1000)
histogram(rlnorm(1000), meanlog=1000)
histogram(rlnorm(1000), meanlog=1000)
histogram(dlnorm(100), meanlog=1000)
histogram(dlnorm(100))
dlnorm()
histogram(rlnorm(100, meanlog=exp(350), sdlog=log(20)))
histogram(rlnorm(100, meanlog=exp(350))
)
)
histogram(rlnorm(100, meanlog=exp(350)))
histogram(rlnorm(100, meanlog=log(350)))
histogram(rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(350)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(1000, meanlog=log(3500)))
histogram(~rlnorm(1000, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(100)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(100)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(100)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(100)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(200)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(500)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(500)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(500)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)))
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(2000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(1000)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(3500/6)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(3500/6)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(3500/6)), nint=20)
histogram(~rlnorm(100, meanlog=log(3500), sdlog=log(3500/6)), nint=20)
histogram(~rlnorm(1000, meanlog=log(3500), sdlog=log(3500/6)), nint=20)
histogram(~rlnorm(1000, meanlog=log(3500), sdlog=log(3500/6)), nint=10)
histogram(~rlnorm(1000, meanlog=log(3500), sdlog=log(3500/6)), nint=10)
histogram(~ exp(rlnorm(1000, meanlog=log(3500), sdlog=log(3500/6)), nint=10))
histogram(~ exp(rlnorm(1000, meanlog=log(3500), sdlog=log(3500/6))), nint=10)
histogram(~ exp(rlnorm(1000, meanlog=log(3500), sdlog=log(3500/6))), nint=10)
rlnorm(10)
rlnorm(10, logmean=log(3500))
rlnorm(10, meanlog = log(3500))
rlnorm(10, meanlog = log(3500))
rlnorm(100, meanlog = log(3500))
histogramm( ~ rlnorm(100, meanlog = log(3500)), nint = 5)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 5)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 7)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 8)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 8)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
set.seed(2009)
histogram( ~ rlnorm(100, meanlog = log(3500)), nint = 20)
set.seed(2009)
rlnorm(100, meanlog = log(3500)),
rlnorm(100, meanlog = log(3500))
library(readr)
X73111_02ir <- read_delim("~/Downloads/73111-02ir.csv",
";", escape_double = FALSE, col_types = cols(`Tsd. EUR` = col_double(),
`Tsd. EUR_1` = col_double(), X1 = col_factor(levels = c("2007",
"2010", "2013"))), trim_ws = TRUE)
View(X73111_02ir)
bargraph( ~X1, data=X73111_02ir)
bargraph( ~ Anzahl | X1, data=X73111_02ir)
bargraph( ~ Anzahl | X1=2013, data=X73111_02ir)
bargraph( ~ Anzahl | X1=="2013", data=X73111_02ir)
bargraph( ~ Anzahl data=X73111_02ir)
bargraph( ~ Anzahl, data=X73111_02ir)
bargraph( ~ Anzahl | X1, data=X73111_02ir)
J2013 <- X73111_02ir[X1="2013",]
X73111_02ir %>% select(X1 == 2013)
X73111_02ir %>% dplyr::select(X1 == 2013)
X73111_02ir %>% dplyr::filter(X1 == 2013)
X73111_02ir %>% dplyr::filter(X1 == 2013) %>% dplyr::filter(X2 != "insgesamt")
X73111_02ir %>% dplyr::filter(X1 == 2013) %>% dplyr::filter(X2 != "insgesamt") %>% Y2013
X73111_02ir %>% dplyr::filter(X1 == 2013) %>% dplyr::filter(X2 != "insgesamt") -> Y2013
bargraph( ~ Anzahl, data=Y2013)
bargraph( Anzahl ~ X2, data=Y2013)
bargraph( Anzahl ~, data=Y2013)
bargraph( Anzahl ~ , data=Y2013)
hist( Y2013$Anzahl)
hist( Y2013$Anzahl, bin=11)
hist( Y2013$Anzahl, bins=11)
barplot( Y2013$Anzahl)
library(BayesFactor)
## Sleep data from t test example
data(sleep)
plot(extra ~ group, data = sleep)
## paired t test
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE)
## Sample from the corresponding posterior distribution
samples = ttestBF(x = sleep$extra[sleep$group==1],
y = sleep$extra[sleep$group==2], paired=TRUE,
posterior = TRUE, iterations = 1000)
plot(samples[,"mu"])
library(mosaic)
bwplot(extra ~ group, data=sleep)
library(mosaic)
library(mosaic)
xylibrary(BayesFactor)
## Sleep data from t test example
data(sleep)
bwplot(extra ~ group, data = sleep)
t.test(extra ~ group, data = sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE)
?ttestBF
17.255888/0.707
2*log(17.255888/0.707)
samples
ttestbf(extra ~ group, paired = TRUE, data=sleep)
ttestBF(extra ~ group, paired = TRUE, data=sleep)
ttestBF(extra | group, paired = TRUE, data=sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE, rscale=1)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE, rscale=sqrt(2))
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE)
ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE)
bf <- ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE)
bf
View(bf)
View(bf)
bf$bayesFactor
summary(bf)
10^(1/2)
17.25888 / 2.848327
(17.25888 / 2.848327)^-1
library(mosaic)
xylibrary(BayesFactor)
## Sleep data from t test example
data(sleep)
bwplot(extra ~ group, data = sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
bf <- (ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE))
bf
library(mosaic)
xylibrary(BayesFactor)
## Sleep data from t test example
data(sleep)
bwplot(extra ~ group, data = sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
(bf <- ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE))
View(bf)
2.848327 / sqrt(2)
2.848327 * sqrt(2)
2.848327 * 2/sqrt(2)
2.848327 * (2/sqrt(2))
2.848327 / (2/sqrt(2))
view(bf)
View(bf)
e^bf$bayesFactor$bf
exp(bf$bayesFactor$bf)
exp(bf@bayesFactor[[bf]])
exp(bf@bayesFactor[["bf"]])
2*bf@bayesFactor[["bf"]]
library(mosaic)
xylibrary(BayesFactor)
## Sleep data from t test example
data(sleep)
bwplot(extra ~ group, data = sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
(bf <- ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE))
exp(bf@bayesFactor[["bf"]])
library(mosaic)
xylibrary(BayesFactor)
## Sleep data from t test example
data(sleep)
bwplot(extra ~ group, data = sleep)
t.test(extra ~ group, paired = TRUE, data = sleep)
## paired t test
(bf <- ttestBF(x = sleep$extra[sleep$group==1], y = sleep$extra[sleep$group==2], paired=TRUE))
exp(bf@bayesFactor[["bf"]])
2*bf@bayesFactor[["bf"]]
runif(37, 0, 36)
round(runif(37, 0, 36),0)
tally(round(runif(37, 0, 36),0))
library(mosaic)
tally(round(runif(37, 0, 36),0))
tally(do(1000)*round(runif(37, 0, 36),0))
do(1000)*round(runif(37, 0, 36),0)
do(10)*round(runif(37, 0, 36),0)
do(10)*tally(round(runif(37, 0, 36),0))
library(mosaic)
tally(round(runif(37, 0, 36),0))
library(mosaic)
coup <- round(runif(37, 0, 36),0)
barchart( coup )
library(mosaic)
set.seed(2009)
coup <- round(runif(37, 0, 36),0)
tally(coup)
barchart( coup )
histogram( coup )
histogram( coup )
histogram( coup )
bargraph( coup )
bargraph( coup )
tally(round(runif(37, 0, 36),0))
bargraph( ~coup )
bargraph( ~coup, xlim = c(0,36) )
bargraph( ~coup, xlim = c(0,36), type="count")
bargraph( ~coup, xlim = c(0,36), type="count")
bargraph( ~coup, xlim = c(0, 36), type="count")
library(mosaic)
set.seed(2009)
coup <- trunc(round(runif(37, 0, 36), digits=0))
tally(coup)
bargraph( ~coup, xlim = c(0, 36), type="count")
histogram( coup )
library(mosaic)
set.seed(2009)
permanenz <- rep(0, times=37)
coup <- trunc(round(runif(37, 0, 36), digits=0))
tally(coup)
bargraph( ~coup, xlim = c(0, 36), type="count")
histogram( coup )
permanenz <- rep(0, times=37)
permanenz
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
permanenz
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
permanenz
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz <- permanenz$anz +1
permanenz
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally(coup)
bargraph( ~ anz, data=permanenz, xlim = c(0, 36), type="count")
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
histogram( coup )
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
#    num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
bargraph( ~ anz, data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
barplot( coup )
barplot(table(coup) )
barplot(table(coup, row.names=0:36 )
)
barplot(table(coup, row.names=0:36, xlim=0:36 ))
barplot(table(coup, row.names=0:36), xlim=0:36 )
barplot(table(coup, row.names=0:36), xlim=c(0,36) )
barplot(table(coup), xlim=c(0,36) )
bargraph( ~ anz | 0:36, data=permanenz, type="count")
bargraph(anz ~0:36 , data=permanenz, type="count")
bargraph(anz ~ as.factor(0:36) , data=permanenz, type="count")
bargraph( ~anz | as.factor(0:36) , data=permanenz, type="count")
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
barplot(table(coup), xlim=c(0,36) )
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 1, 37), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
barplot(table(coup), xlim=c(0,36) )
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
permanenz
library(mosaic)
set.seed(2009)
permanenz <- data.frame(
num <- 0:36,
anz <- rep(0, times=37)
)
coup <- trunc(round(runif(37, 1, 38), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
tally()
barplot(table(coup), xlim=c(0,36) )
bargraph( ~anz  , data=permanenz, type="count")
for(x in 1:50) {
coup <- trunc(round(runif(37, 0, 36), digits=0))
for(i in coup) permanenz$anz[i] <- permanenz$anz[i] + 1
}
bargraph( ~anz  , data=permanenz, type="count")
histogram( ~ anz, data=permanenz, type="count")
permanenz
dunif(37,0,37)
runif(37,0,37)
runif(37,0,38)
trunc(runif(37,0,38))
trunc(runif(37,0,38))
trunc(runif(37,0,38))
trunc(runif(37,0,38))
trunc(runif(37,0,38))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,38)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
sort(trunc(runif(37,0,37)))
Nullvtlg <- do(10000) * rflip(n = 14, prob = 1/3)
library(mosaic)
Nullvtlg <- do(10000) * rflip(n = 14, prob = 1/3)
prop( ~ (heads>=3), data=Nullvtlg)
Nullvtlg
blogdown:::new_post_addin()
blogdown:::serve_site()
